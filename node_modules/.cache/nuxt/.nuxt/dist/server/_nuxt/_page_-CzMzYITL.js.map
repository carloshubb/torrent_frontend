{"version":3,"file":"_page_-CzMzYITL.js","sources":["../../../../../../../pages/search/[key]/[page].vue"],"sourcesContent":["<script setup>\r\nimport AppLayout from '~/layouts/AppLayout.vue';\r\nimport TorrentPagination from '~/components/TorrentPagination.vue';\r\nimport torrentService from '~/api/torrentService';\r\nimport TorrentHome from '~/components/TorrentHome.vue';\r\n\r\nconst route = useRoute()\r\nconst keyword = route.params.key\r\nconst page = route.params.page\r\n\r\nconst torrents = ref({})\r\nconst head_title = ref([])\r\nconst topLinks = ref([]);\r\nconst currentPage = ref([]);\r\nconst lastPage = ref([]);\r\n\r\n// Fetch function to get torrent data and update dashboard_data\r\nasync function fetchTorrents() {\r\n  \r\n    try {\r\n      const response = await torrentService.get(`/torrents/type?type=search&search=${keyword}&page=${page}`);\r\n      // For demo, assuming all torrents in one group with title \"All Torrents\"\r\n      if (response?.data?.data?.data.length > 0) {\r\n            currentPage.value = response.data.data.current_page\r\n            lastPage.value = response.data.data.last_page\r\n            \r\n        }\r\n      torrents.value = {\r\n        icon: 'flaticon-top',\r\n        title: `Searching for: ${keyword}`,\r\n        data: response.data.data.data,      \r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to fetch torrents:', error)\r\n    }\r\n\r\n\r\n}\r\nonMounted(() => {\r\n   fetchTorrents()     \r\n});\r\n\r\n</script>\r\n<template>\r\n\r\n    <Head title=\"Trending Torrents\" />\r\n    <AppLayout>\r\n      <TorrentHome v-if=\"Object.keys(torrents).length > 0\" key=\"searching\" :torrents=\"torrents\" :flag_edit=true />\r\n      <TorrentPagination :currentPage=\"currentPage\" :lastPage=\"lastPage\" @page-changed=\"onPageChange\" />\r\n    </AppLayout>\r\n</template>\r\n"],"names":["_ssrRenderComponent","_push","_parent","_unref","onPageChange","_createBlock","TorrentHome","_createVNode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAMA,UAAM,QAAQ,SAAQ;AACN,UAAM,OAAO;AAChB,UAAM,OAAO;AAE1B,UAAM,WAAW,IAAI,EAAE;AACJ,QAAI,EAAE;AACR,QAAI,EAAE;AACvB,UAAM,cAAc,IAAI,CAAA,CAAE;AAC1B,UAAM,WAAW,IAAI,CAAA,CAAE;;;;AA+Bb,YAAAA,mBAAA,iBAAA,EAAA,OAAM,oBAAmB,GAAA,MAAA,OAAA,CAAA;;yBAC/B,CAGY,GAAAC,QAAAC,UAAA,aAAA;;AAFS,gBAAA,OAAO,KAAKC,MAAA,QAAA,CAAQ,EAAE,SAAM,GAAA;;gBAAM,KAAI;AAAA,gBAAa,UAAUA,MAAA,QAAA;AAAA,gBAAW,WAAU;AAAA;;;;;cACjF,aAAaA,MAAA,WAAA;AAAA,cAAc,UAAUA,MAAA,QAAA;AAAA,cAAW,eAAcC,KAAAA;AAAAA;;;cAD/D,OAAO,KAAKD,MAAA,QAAA,CAAQ,EAAE,SAAM,kBAA/CE,YAA4GC,oBAAA;AAAA,gBAAvD,KAAI;AAAA,gBAAa,UAAUH,MAAA,QAAA;AAAA,gBAAW,WAAU;AAAA;cACrGI,YAAkG,mBAAA;AAAA,gBAA9E,aAAaJ,MAAA,WAAA;AAAA,gBAAc,UAAUA,MAAA,QAAA;AAAA,gBAAW,eAAcC,KAAAA;AAAAA;;;;;;;;;;;;;;;;"}