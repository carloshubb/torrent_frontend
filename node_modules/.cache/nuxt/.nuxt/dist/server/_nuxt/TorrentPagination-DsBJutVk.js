import { useRouter } from "vue-router";
import { mergeProps, useSSRContext } from "vue";
import { ssrRenderAttrs, ssrIncludeBooleanAttr, ssrRenderList, ssrRenderAttr, ssrRenderClass, ssrInterpolate } from "vue/server-renderer";
import { _ as _export_sfc } from "../server.mjs";
const router = useRouter();
const _sfc_main = {
  name: "TorrentPagination",
  props: {
    currentPage: {
      type: Number,
      required: true
    },
    lastPage: {
      type: Number,
      required: true
    }
  },
  computed: {
    pages() {
      const pages = [];
      const total = this.lastPage;
      const current = this.currentPage;
      const addPage = (number, display = null, isEllipsis = false) => {
        pages.push({
          key: isEllipsis ? `ellipsis-${pages.length}` : `page-${number}`,
          number,
          display: display || number,
          isEllipsis
        });
      };
      if (total <= 5) {
        for (let i = 1; i <= total; i++) {
          addPage(i);
        }
      } else {
        addPage(1);
        if (current > 3) {
          addPage(null, "...", true);
        }
        let start = Math.max(2, current - 1);
        let end = Math.min(total - 1, current + 1);
        if (current <= 3) {
          start = 2;
          end = 4;
        } else if (current >= total - 2) {
          start = total - 3;
          end = total - 1;
        }
        for (let i = start; i <= end; i++) {
          addPage(i);
        }
        if (current < total - 2) {
          addPage(null, "...", true);
        }
        addPage(total);
      }
      return pages;
    }
  },
  methods: {
    changePage(page) {
      if (!page) return;
      if (page >= 1 && page <= this.lastPage && page !== this.currentPage) {
        this.$emit("page-changed", page);
        const next_url = this.generateHref(page);
        router.push(next_url);
      }
    },
    generateHref(page) {
      let urlParts = [];
      let page_url = "/";
      if (urlParts.length > 0 && urlParts[0] != "library") {
        page_url = `/${urlParts[0]}/${urlParts[1]}/${page}/`;
      } else {
        page_url = `/`;
      }
      return page_url;
    }
  }
};
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(mergeProps({ class: "flex justify-center mt-4 space-x-2" }, _attrs))} data-v-033b19eb><button${ssrIncludeBooleanAttr($props.currentPage === 1) ? " disabled" : ""} class="px-3 py-1 rounded bg-gray-700 text-white disabled:opacity-50" data-v-033b19eb> Prev </button><!--[-->`);
  ssrRenderList($options.pages, (page) => {
    _push(`<a${ssrIncludeBooleanAttr(page.isEllipsis) ? " disabled" : ""}${ssrRenderAttr("href", page.isEllipsis ? "javascript:void(0)" : $options.generateHref(page.number))} class="${ssrRenderClass([
      "px-3 py-1 rounded",
      page.number === $props.currentPage ? "bg-orange-500 text-white" : "bg-gray-700 text-gray-300 hover:bg-gray-600",
      page.isEllipsis ? "cursor-default" : "cursor-pointer"
    ])}" data-v-033b19eb>${ssrInterpolate(page.display)}</a>`);
  });
  _push(`<!--]--><button${ssrIncludeBooleanAttr($props.currentPage === $props.lastPage) ? " disabled" : ""} class="px-3 py-1 rounded bg-gray-700 text-white disabled:opacity-50" data-v-033b19eb> Next </button></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/TorrentPagination.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const TorrentPagination = /* @__PURE__ */ Object.assign(_export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__scopeId", "data-v-033b19eb"]]), { __name: "TorrentPagination" });
export {
  TorrentPagination as T
};
//# sourceMappingURL=TorrentPagination-DsBJutVk.js.map
