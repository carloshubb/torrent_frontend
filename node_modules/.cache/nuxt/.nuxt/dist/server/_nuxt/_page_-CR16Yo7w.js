import { H as Head } from "./components-CkKCuKad.js";
import { ref, computed, withCtx, unref, createVNode, createBlock, createCommentVNode, toDisplayString, openBlock, Fragment, renderList, withModifiers, createTextVNode, useSSRContext } from "vue";
import { ssrRenderComponent, ssrInterpolate, ssrRenderClass, ssrRenderList, ssrRenderStyle } from "vue/server-renderer";
import _sfc_main$1 from "./AppLayout-YcpLZ4jN.js";
import { T as TorrentPagination } from "./TorrentPagination-DsBJutVk.js";
import "./torrentService-CHqQEqPf.js";
import { useRouter } from "vue-router";
import { d as useRoute } from "../server.mjs";
import "./composables-Dj0Rik_j.js";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/@unhead/vue/dist/index.mjs";
import "@inertiajs/vue3";
import "./useAuth-COd_Gpgv.js";
import "axios";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/ofetch/dist/node.mjs";
import "#internal/nuxt/paths";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/hookable/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/unctx/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/h3/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/radix3/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/defu/dist/defu.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/ufo/dist/index.mjs";
const _sfc_main = {
  __name: "[page]",
  __ssrInlineRender: true,
  setup(__props) {
    const route = useRoute();
    route.params.page;
    const router = useRouter();
    const dropdowns = ref({
      genre: false,
      year: false,
      language: false,
      sortBy: false,
      sortOrder: false
    });
    const selectedGenre = ref("All");
    const selectedYear = ref("All");
    const selectedLanguage = ref("All");
    const selectedSortBy = ref("Movie Score");
    const selectedSortOrder = ref("Descending");
    const showModal = ref(false);
    const selectedMovie = ref(null);
    const genres = ref(["All", "Action", "Crime", "Drama", "Comedy", "Thriller", "Horror", "Romance", "Sci-Fi", "Adventure"]);
    const years = ref(["All", "2025", "2024", "2023", "2022", "2021", "2020", "2019", "2018", "2017", "2016", "2015"]);
    const languages = ref(["All", "English", "Spanish", "French", "German", "Italian", "Japanese", "Korean", "Chinese"]);
    const sortOptions = ref(["Movie Score", "Release Date", "Title", "Rating", "Year"]);
    const sortOrders = ref(["Descending", "Ascending"]);
    const movielibrary = ref([]);
    const currentPage = ref(1);
    const lastPage = ref(1);
    const filteredAndSortedMovies = computed(() => {
      if (movielibrary.value.length > 0) {
        let filtered = [...movielibrary.value];
        if (selectedGenre.value !== "All") {
          filtered = filtered.filter((movie) => movie.genre === selectedGenre.value);
        }
        if (selectedYear.value !== "All") {
          filtered = filtered.filter((movie) => movie.year.toString() === selectedYear.value);
        }
        if (selectedLanguage.value !== "All") {
          filtered = filtered.filter((movie) => movie.language === selectedLanguage.value);
        }
        return filtered;
      }
    });
    const toggleDropdown = (dropdownName) => {
      Object.keys(dropdowns.value).forEach((key) => {
        if (key !== dropdownName) {
          dropdowns.value[key] = false;
        }
      });
      dropdowns.value[dropdownName] = !dropdowns.value[dropdownName];
    };
    const selectGenre = (genre) => {
      selectedGenre.value = genre;
      dropdowns.value.genre = false;
    };
    const selectYear = (year) => {
      selectedYear.value = year;
      dropdowns.value.year = false;
    };
    const selectLanguage = (language) => {
      selectedLanguage.value = language;
      dropdowns.value.language = false;
    };
    const selectSortBy = (sortBy) => {
      selectedSortBy.value = sortBy;
      dropdowns.value.sortBy = false;
    };
    const selectSortOrder = (order) => {
      selectedSortOrder.value = order;
      dropdowns.value.sortOrder = false;
    };
    const sortMovies = () => {
      let sortKey = "";
      switch (selectedSortBy.value) {
        case "Movie Score":
          sortKey = "score";
          break;
        case "Release Date":
        case "Year":
          sortKey = "year";
          break;
        case "Title":
          sortKey = "title";
          break;
        case "Rating":
          sortKey = "rating";
          break;
        default:
          sortKey = "score";
      }
      movies.value.sort((a, b) => {
        let valueA = a[sortKey];
        let valueB = b[sortKey];
        if (typeof valueA === "string") {
          valueA = valueA.toLowerCase();
          valueB = valueB.toLowerCase();
        }
        if (selectedSortOrder.value === "Ascending") {
          return valueA > valueB ? 1 : valueA < valueB ? -1 : 0;
        } else {
          return valueA < valueB ? 1 : valueA > valueB ? -1 : 0;
        }
      });
    };
    const openModal = (movie) => {
      selectedMovie.value = movie;
      showModal.value = true;
      (void 0).body.style.overflow = "hidden";
    };
    const closeModal = () => {
      showModal.value = false;
      selectedMovie.value = null;
      (void 0).body.style.overflow = "auto";
    };
    const viewReleases = () => {
      router.push(selectedMovie.value.info_url);
    };
    const onPageChange = (page2) => {
      if (page2 >= 1 && page2 <= lastPage.value) {
        currentPage.value = page2;
      }
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = Head;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, { title: "" }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$1, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            _push2(`<div class="w-full mt-5 text-white"${_scopeId}><div class="container"${_scopeId}><div class="bg-gray-800 p-4 rounded-lg mb-6 flex items-center gap-4 flex-wrap"${_scopeId}><div class="relative"${_scopeId}><label class="block text-sm font-medium mb-1"${_scopeId}>Genre</label><div class="relative"${_scopeId}><button class="bg-gray-700 border border-gray-600 px-4 py-2 rounded w-40 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"${_scopeId}><span${_scopeId}>${ssrInterpolate(unref(selectedGenre))}</span><svg class="${ssrRenderClass([{ "rotate-180": unref(dropdowns).genre }, "w-4 h-4 transition-transform"])}" fill="none" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"${_scopeId}></path></svg></button>`);
            if (unref(dropdowns).genre) {
              _push2(`<div class="absolute top-full left-0 mt-1 w-40 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"${_scopeId}><!--[-->`);
              ssrRenderList(unref(genres), (genre) => {
                _push2(`<button class="block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b"${_scopeId}>${ssrInterpolate(genre)}</button>`);
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div><div class="relative"${_scopeId}><label class="block text-sm font-medium mb-1"${_scopeId}>Year</label><div class="relative"${_scopeId}><button class="bg-gray-700 border border-gray-600 px-4 py-2 rounded w-32 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"${_scopeId}><span${_scopeId}>${ssrInterpolate(unref(selectedYear))}</span><svg class="${ssrRenderClass([{ "rotate-180": unref(dropdowns).year }, "w-4 h-4 transition-transform"])}" fill="none" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"${_scopeId}></path></svg></button>`);
            if (unref(dropdowns).year) {
              _push2(`<div class="absolute top-full left-0 mt-1 w-32 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"${_scopeId}><!--[-->`);
              ssrRenderList(unref(years), (year) => {
                _push2(`<button class="block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b"${_scopeId}>${ssrInterpolate(year)}</button>`);
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div><div class="relative"${_scopeId}><label class="block text-sm font-medium mb-1"${_scopeId}>Language</label><div class="relative"${_scopeId}><button class="bg-gray-700 border border-gray-600 px-4 py-2 rounded w-36 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"${_scopeId}><span${_scopeId}>${ssrInterpolate(unref(selectedLanguage))}</span><svg class="${ssrRenderClass([{ "rotate-180": unref(dropdowns).language }, "w-4 h-4 transition-transform"])}" fill="none" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"${_scopeId}></path></svg></button>`);
            if (unref(dropdowns).language) {
              _push2(`<div class="absolute top-full left-0 mt-1 w-36 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"${_scopeId}><!--[-->`);
              ssrRenderList(unref(languages), (language) => {
                _push2(`<button class="block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b"${_scopeId}>${ssrInterpolate(language)}</button>`);
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div><div class="relative"${_scopeId}><label class="block text-sm font-medium mb-1"${_scopeId}>Sort By</label><div class="relative"${_scopeId}><button class="bg-gray-700 border border-gray-600 px-4 py-2 rounded w-40 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"${_scopeId}><span${_scopeId}>${ssrInterpolate(unref(selectedSortBy))}</span><svg class="${ssrRenderClass([{ "rotate-180": unref(dropdowns).sortBy }, "w-4 h-4 transition-transform"])}" fill="none" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"${_scopeId}></path></svg></button>`);
            if (unref(dropdowns).sortBy) {
              _push2(`<div class="absolute top-full left-0 mt-1 w-40 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"${_scopeId}><!--[-->`);
              ssrRenderList(unref(sortOptions), (sortOption) => {
                _push2(`<button class="block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b"${_scopeId}>${ssrInterpolate(sortOption)}</button>`);
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div><div class="relative"${_scopeId}><label class="block text-sm font-medium mb-1"${_scopeId}>Sort</label><div class="relative"${_scopeId}><button class="bg-gray-700 border border-gray-600 px-4 py-2 rounded w-32 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"${_scopeId}><span${_scopeId}>${ssrInterpolate(unref(selectedSortOrder))}</span><svg class="${ssrRenderClass([{ "rotate-180": unref(dropdowns).sortOrder }, "w-4 h-4 transition-transform"])}" fill="none" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"${_scopeId}></path></svg></button>`);
            if (unref(dropdowns).sortOrder) {
              _push2(`<div class="absolute top-full left-0 mt-1 w-32 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"${_scopeId}><!--[-->`);
              ssrRenderList(unref(sortOrders), (order) => {
                _push2(`<button class="${ssrRenderClass([{ "text-red-400": order === "Descending" }, "block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b"])}"${_scopeId}>${ssrInterpolate(order)}</button>`);
              });
              _push2(`<!--]--></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</div></div><div class="flex items-end mt-6"${_scopeId}><button class="bg-gray-800 hover:bg-gray-700 border border-gray-600 px-6 py-2 rounded font-medium transition-colors"${_scopeId}> Sort </button></div></div><div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4"${_scopeId}><!--[-->`);
            ssrRenderList(unref(filteredAndSortedMovies), (movie) => {
              _push2(`<div class="bg-gray-800 rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow"${_scopeId}><div class="aspect-[2/3] bg-gradient-to-br from-gray-700 to-gray-800 flex items-center justify-center relative cursor-pointer"${_scopeId}><div class="w-full h-64 bg-cover bg-center" style="${ssrRenderStyle({ backgroundImage: `url('${movie.img_url}')` })}"${_scopeId}><div class="w-full h-full bg-black bg-opacity-40 flex items-center justify-center"${_scopeId}><span class="text-lg font-semibold text-center px-2"${_scopeId}>${ssrInterpolate(movie.title)}</span></div></div></div><div class="p-2 flex justify-center"${_scopeId}><div class="flex"${_scopeId}><!--[-->`);
              ssrRenderList(5, (star) => {
                _push2(`<svg class="${ssrRenderClass([star <= movie.rate ? "text-yellow-400" : "text-gray-500", "w-4 h-4"])}" fill="currentColor" viewBox="0 0 20 20"${_scopeId}><path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"${_scopeId}></path></svg>`);
              });
              _push2(`<!--]--></div></div></div>`);
            });
            _push2(`<!--]--></div></div></div>`);
            _push2(ssrRenderComponent(TorrentPagination, {
              currentPage: unref(currentPage),
              lastPage: unref(lastPage),
              onPageChanged: onPageChange
            }, null, _parent2, _scopeId));
            if (unref(showModal)) {
              _push2(`<div class="fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4"${_scopeId}><div class="bg-gradient-to-br from-orange-500 to-red-600 rounded-lg max-w-md w-full mx-4 relative overflow-hidden"${_scopeId}><button class="absolute top-4 right-4 text-white hover:text-gray-300 z-10"${_scopeId}><svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"${_scopeId}></path></svg></button><div class="p-6 text-white"${_scopeId}><h2 class="text-2xl font-bold mb-2 text-white"${_scopeId}>${ssrInterpolate(unref(selectedMovie)?.info_title)}</h2><div class="flex gap-2 mb-4"${_scopeId}><span class="text-sm bg-black bg-opacity-20 px-5 py-1 rounded ml-10"${_scopeId}>${unref(selectedMovie)?.category ?? ""}</span></div><p class="text-sm mb-6 leading-relaxed text-white opacity-90"${_scopeId}>${ssrInterpolate(unref(selectedMovie)?.content)}</p><div class="flex gap-3"${_scopeId}><div class="text-white px-4 py-2 rounded text-sm font-medium transition-colors flex items-center gap-2"${_scopeId}><svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"${_scopeId}></path></svg> Download: </div><button class="bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded text-sm font-medium transition-colors"${_scopeId}> View Releases </button></div></div></div></div>`);
            } else {
              _push2(`<!---->`);
            }
          } else {
            return [
              createVNode("div", { class: "w-full mt-5 text-white" }, [
                createVNode("div", { class: "container" }, [
                  createVNode("div", { class: "bg-gray-800 p-4 rounded-lg mb-6 flex items-center gap-4 flex-wrap" }, [
                    createVNode("div", { class: "relative" }, [
                      createVNode("label", { class: "block text-sm font-medium mb-1" }, "Genre"),
                      createVNode("div", { class: "relative" }, [
                        createVNode("button", {
                          onClick: ($event) => toggleDropdown("genre"),
                          class: "bg-gray-700 border border-gray-600 px-4 py-2 rounded w-40 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"
                        }, [
                          createVNode("span", null, toDisplayString(unref(selectedGenre)), 1),
                          (openBlock(), createBlock("svg", {
                            class: ["w-4 h-4 transition-transform", { "rotate-180": unref(dropdowns).genre }],
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24"
                          }, [
                            createVNode("path", {
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              "stroke-width": "2",
                              d: "M19 9l-7 7-7-7"
                            })
                          ], 2))
                        ], 8, ["onClick"]),
                        unref(dropdowns).genre ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "absolute top-full left-0 mt-1 w-40 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"
                        }, [
                          (openBlock(true), createBlock(Fragment, null, renderList(unref(genres), (genre) => {
                            return openBlock(), createBlock("button", {
                              key: genre,
                              onClick: ($event) => selectGenre(genre),
                              class: "block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b"
                            }, toDisplayString(genre), 9, ["onClick"]);
                          }), 128))
                        ])) : createCommentVNode("", true)
                      ])
                    ]),
                    createVNode("div", { class: "relative" }, [
                      createVNode("label", { class: "block text-sm font-medium mb-1" }, "Year"),
                      createVNode("div", { class: "relative" }, [
                        createVNode("button", {
                          onClick: ($event) => toggleDropdown("year"),
                          class: "bg-gray-700 border border-gray-600 px-4 py-2 rounded w-32 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"
                        }, [
                          createVNode("span", null, toDisplayString(unref(selectedYear)), 1),
                          (openBlock(), createBlock("svg", {
                            class: ["w-4 h-4 transition-transform", { "rotate-180": unref(dropdowns).year }],
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24"
                          }, [
                            createVNode("path", {
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              "stroke-width": "2",
                              d: "M19 9l-7 7-7-7"
                            })
                          ], 2))
                        ], 8, ["onClick"]),
                        unref(dropdowns).year ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "absolute top-full left-0 mt-1 w-32 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"
                        }, [
                          (openBlock(true), createBlock(Fragment, null, renderList(unref(years), (year) => {
                            return openBlock(), createBlock("button", {
                              key: year,
                              onClick: ($event) => selectYear(year),
                              class: "block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b"
                            }, toDisplayString(year), 9, ["onClick"]);
                          }), 128))
                        ])) : createCommentVNode("", true)
                      ])
                    ]),
                    createVNode("div", { class: "relative" }, [
                      createVNode("label", { class: "block text-sm font-medium mb-1" }, "Language"),
                      createVNode("div", { class: "relative" }, [
                        createVNode("button", {
                          onClick: ($event) => toggleDropdown("language"),
                          class: "bg-gray-700 border border-gray-600 px-4 py-2 rounded w-36 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"
                        }, [
                          createVNode("span", null, toDisplayString(unref(selectedLanguage)), 1),
                          (openBlock(), createBlock("svg", {
                            class: ["w-4 h-4 transition-transform", { "rotate-180": unref(dropdowns).language }],
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24"
                          }, [
                            createVNode("path", {
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              "stroke-width": "2",
                              d: "M19 9l-7 7-7-7"
                            })
                          ], 2))
                        ], 8, ["onClick"]),
                        unref(dropdowns).language ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "absolute top-full left-0 mt-1 w-36 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"
                        }, [
                          (openBlock(true), createBlock(Fragment, null, renderList(unref(languages), (language) => {
                            return openBlock(), createBlock("button", {
                              key: language,
                              onClick: ($event) => selectLanguage(language),
                              class: "block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b"
                            }, toDisplayString(language), 9, ["onClick"]);
                          }), 128))
                        ])) : createCommentVNode("", true)
                      ])
                    ]),
                    createVNode("div", { class: "relative" }, [
                      createVNode("label", { class: "block text-sm font-medium mb-1" }, "Sort By"),
                      createVNode("div", { class: "relative" }, [
                        createVNode("button", {
                          onClick: ($event) => toggleDropdown("sortBy"),
                          class: "bg-gray-700 border border-gray-600 px-4 py-2 rounded w-40 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"
                        }, [
                          createVNode("span", null, toDisplayString(unref(selectedSortBy)), 1),
                          (openBlock(), createBlock("svg", {
                            class: ["w-4 h-4 transition-transform", { "rotate-180": unref(dropdowns).sortBy }],
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24"
                          }, [
                            createVNode("path", {
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              "stroke-width": "2",
                              d: "M19 9l-7 7-7-7"
                            })
                          ], 2))
                        ], 8, ["onClick"]),
                        unref(dropdowns).sortBy ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "absolute top-full left-0 mt-1 w-40 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"
                        }, [
                          (openBlock(true), createBlock(Fragment, null, renderList(unref(sortOptions), (sortOption) => {
                            return openBlock(), createBlock("button", {
                              key: sortOption,
                              onClick: ($event) => selectSortBy(sortOption),
                              class: "block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b"
                            }, toDisplayString(sortOption), 9, ["onClick"]);
                          }), 128))
                        ])) : createCommentVNode("", true)
                      ])
                    ]),
                    createVNode("div", { class: "relative" }, [
                      createVNode("label", { class: "block text-sm font-medium mb-1" }, "Sort"),
                      createVNode("div", { class: "relative" }, [
                        createVNode("button", {
                          onClick: ($event) => toggleDropdown("sortOrder"),
                          class: "bg-gray-700 border border-gray-600 px-4 py-2 rounded w-32 text-left flex items-center justify-between hover:bg-gray-600 transition-colors"
                        }, [
                          createVNode("span", null, toDisplayString(unref(selectedSortOrder)), 1),
                          (openBlock(), createBlock("svg", {
                            class: ["w-4 h-4 transition-transform", { "rotate-180": unref(dropdowns).sortOrder }],
                            fill: "none",
                            stroke: "currentColor",
                            viewBox: "0 0 24 24"
                          }, [
                            createVNode("path", {
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              "stroke-width": "2",
                              d: "M19 9l-7 7-7-7"
                            })
                          ], 2))
                        ], 8, ["onClick"]),
                        unref(dropdowns).sortOrder ? (openBlock(), createBlock("div", {
                          key: 0,
                          class: "absolute top-full left-0 mt-1 w-32 bg-gray-700 border border-gray-600 rounded shadow-lg z-10"
                        }, [
                          (openBlock(true), createBlock(Fragment, null, renderList(unref(sortOrders), (order) => {
                            return openBlock(), createBlock("button", {
                              key: order,
                              onClick: ($event) => selectSortOrder(order),
                              class: ["block w-full text-left px-4 py-2 hover:bg-gray-600 transition-colors first:rounded-t last:rounded-b", { "text-red-400": order === "Descending" }]
                            }, toDisplayString(order), 11, ["onClick"]);
                          }), 128))
                        ])) : createCommentVNode("", true)
                      ])
                    ]),
                    createVNode("div", { class: "flex items-end mt-6" }, [
                      createVNode("button", {
                        onClick: sortMovies,
                        class: "bg-gray-800 hover:bg-gray-700 border border-gray-600 px-6 py-2 rounded font-medium transition-colors"
                      }, " Sort ")
                    ])
                  ]),
                  createVNode("div", { class: "grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-4" }, [
                    (openBlock(true), createBlock(Fragment, null, renderList(unref(filteredAndSortedMovies), (movie) => {
                      return openBlock(), createBlock("div", {
                        key: movie.id,
                        class: "bg-gray-800 rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow"
                      }, [
                        createVNode("div", {
                          class: "aspect-[2/3] bg-gradient-to-br from-gray-700 to-gray-800 flex items-center justify-center relative cursor-pointer",
                          onClick: ($event) => openModal(movie)
                        }, [
                          createVNode("div", {
                            class: "w-full h-64 bg-cover bg-center",
                            style: { backgroundImage: `url('${movie.img_url}')` }
                          }, [
                            createVNode("div", { class: "w-full h-full bg-black bg-opacity-40 flex items-center justify-center" }, [
                              createVNode("span", { class: "text-lg font-semibold text-center px-2" }, toDisplayString(movie.title), 1)
                            ])
                          ], 4)
                        ], 8, ["onClick"]),
                        createVNode("div", { class: "p-2 flex justify-center" }, [
                          createVNode("div", { class: "flex" }, [
                            (openBlock(), createBlock(Fragment, null, renderList(5, (star) => {
                              return createVNode("svg", {
                                key: star,
                                class: [star <= movie.rate ? "text-yellow-400" : "text-gray-500", "w-4 h-4"],
                                fill: "currentColor",
                                viewBox: "0 0 20 20"
                              }, [
                                createVNode("path", { d: "M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" })
                              ], 2);
                            }), 64))
                          ])
                        ])
                      ]);
                    }), 128))
                  ])
                ])
              ]),
              createVNode(TorrentPagination, {
                currentPage: unref(currentPage),
                lastPage: unref(lastPage),
                onPageChanged: onPageChange
              }, null, 8, ["currentPage", "lastPage"]),
              unref(showModal) ? (openBlock(), createBlock("div", {
                key: 0,
                class: "fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50 p-4",
                onClick: closeModal
              }, [
                createVNode("div", {
                  class: "bg-gradient-to-br from-orange-500 to-red-600 rounded-lg max-w-md w-full mx-4 relative overflow-hidden",
                  onClick: withModifiers(() => {
                  }, ["stop"])
                }, [
                  createVNode("button", {
                    onClick: closeModal,
                    class: "absolute top-4 right-4 text-white hover:text-gray-300 z-10"
                  }, [
                    (openBlock(), createBlock("svg", {
                      class: "w-6 h-6",
                      fill: "none",
                      stroke: "currentColor",
                      viewBox: "0 0 24 24"
                    }, [
                      createVNode("path", {
                        "stroke-linecap": "round",
                        "stroke-linejoin": "round",
                        "stroke-width": "2",
                        d: "M6 18L18 6M6 6l12 12"
                      })
                    ]))
                  ]),
                  createVNode("div", { class: "p-6 text-white" }, [
                    createVNode("h2", { class: "text-2xl font-bold mb-2 text-white" }, toDisplayString(unref(selectedMovie)?.info_title), 1),
                    createVNode("div", { class: "flex gap-2 mb-4" }, [
                      createVNode("span", {
                        class: "text-sm bg-black bg-opacity-20 px-5 py-1 rounded ml-10",
                        innerHTML: unref(selectedMovie)?.category
                      }, null, 8, ["innerHTML"])
                    ]),
                    createVNode("p", { class: "text-sm mb-6 leading-relaxed text-white opacity-90" }, toDisplayString(unref(selectedMovie)?.content), 1),
                    createVNode("div", { class: "flex gap-3" }, [
                      createVNode("div", { class: "text-white px-4 py-2 rounded text-sm font-medium transition-colors flex items-center gap-2" }, [
                        (openBlock(), createBlock("svg", {
                          class: "w-4 h-4",
                          fill: "none",
                          stroke: "currentColor",
                          viewBox: "0 0 24 24"
                        }, [
                          createVNode("path", {
                            "stroke-linecap": "round",
                            "stroke-linejoin": "round",
                            "stroke-width": "2",
                            d: "M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"
                          })
                        ])),
                        createTextVNode(" Download: ")
                      ]),
                      createVNode("button", {
                        onClick: viewReleases,
                        class: "bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded text-sm font-medium transition-colors"
                      }, " View Releases ")
                    ])
                  ])
                ], 8, ["onClick"])
              ])) : createCommentVNode("", true)
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/library/[page].vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
export {
  _sfc_main as default
};
//# sourceMappingURL=_page_-CR16Yo7w.js.map
