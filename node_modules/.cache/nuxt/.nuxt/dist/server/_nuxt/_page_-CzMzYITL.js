import { H as Head } from "./components-CkKCuKad.js";
import { ref, withCtx, unref, createBlock, createCommentVNode, createVNode, openBlock, useSSRContext } from "vue";
import { ssrRenderComponent } from "vue/server-renderer";
import _sfc_main$1 from "./AppLayout-YcpLZ4jN.js";
import { T as TorrentPagination } from "./TorrentPagination-DsBJutVk.js";
import "./torrentService-CHqQEqPf.js";
import { _ as __nuxt_component_1 } from "./TorrentHome-CuBGNTUQ.js";
import { d as useRoute } from "../server.mjs";
import "./composables-Dj0Rik_j.js";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/@unhead/vue/dist/index.mjs";
import "@inertiajs/vue3";
import "vue-router";
import "./useAuth-COd_Gpgv.js";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/ofetch/dist/node.mjs";
import "#internal/nuxt/paths";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/hookable/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/unctx/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/h3/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/radix3/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/defu/dist/defu.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/ufo/dist/index.mjs";
import "axios";
const _sfc_main = {
  __name: "[page]",
  __ssrInlineRender: true,
  setup(__props) {
    const route = useRoute();
    route.params.key;
    route.params.page;
    const torrents = ref({});
    ref([]);
    ref([]);
    const currentPage = ref([]);
    const lastPage = ref([]);
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = Head;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, { title: "Trending Torrents" }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$1, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (Object.keys(unref(torrents)).length > 0) {
              _push2(ssrRenderComponent(__nuxt_component_1, {
                key: "searching",
                torrents: unref(torrents),
                flag_edit: true
              }, null, _parent2, _scopeId));
            } else {
              _push2(`<!---->`);
            }
            _push2(ssrRenderComponent(TorrentPagination, {
              currentPage: unref(currentPage),
              lastPage: unref(lastPage),
              onPageChanged: _ctx.onPageChange
            }, null, _parent2, _scopeId));
          } else {
            return [
              Object.keys(unref(torrents)).length > 0 ? (openBlock(), createBlock(__nuxt_component_1, {
                key: "searching",
                torrents: unref(torrents),
                flag_edit: true
              }, null, 8, ["torrents"])) : createCommentVNode("", true),
              createVNode(TorrentPagination, {
                currentPage: unref(currentPage),
                lastPage: unref(lastPage),
                onPageChanged: _ctx.onPageChange
              }, null, 8, ["currentPage", "lastPage", "onPageChanged"])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/search/[key]/[page].vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
export {
  _sfc_main as default
};
//# sourceMappingURL=_page_-CzMzYITL.js.map
