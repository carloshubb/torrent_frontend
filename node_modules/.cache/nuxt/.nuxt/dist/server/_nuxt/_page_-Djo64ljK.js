import { H as Head } from "./components-CkKCuKad.js";
import { ref, withCtx, unref, createBlock, createCommentVNode, createVNode, openBlock, toDisplayString, Fragment, renderList, useSSRContext } from "vue";
import { ssrRenderComponent, ssrInterpolate, ssrRenderList, ssrRenderAttr, ssrRenderClass } from "vue/server-renderer";
import _sfc_main$1 from "./AppLayout-YcpLZ4jN.js";
import { T as TorrentPagination } from "./TorrentPagination-DsBJutVk.js";
import "./torrentService-CHqQEqPf.js";
import dayjs from "dayjs";
import { d as useRoute } from "../server.mjs";
import "./composables-Dj0Rik_j.js";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/@unhead/vue/dist/index.mjs";
import "@inertiajs/vue3";
import "vue-router";
import "./useAuth-COd_Gpgv.js";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/ofetch/dist/node.mjs";
import "#internal/nuxt/paths";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/hookable/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/unctx/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/h3/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/radix3/dist/index.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/defu/dist/defu.mjs";
import "D:/_4_Work/Web/torrent-nuxt/frontend/node_modules/ufo/dist/index.mjs";
import "axios";
function approveDate(date) {
  if (!date) return "";
  const options = { year: "numeric", month: "long", day: "numeric" };
  return new Date(date).toLocaleDateString(void 0, options);
}
function formatApprovedAt(date) {
  return approveDate(date);
}
const _sfc_main = {
  __name: "[page]",
  __ssrInlineRender: true,
  setup(__props) {
    const torrents = ref([]);
    const userInfo = ref({});
    const currentPage = ref(1);
    const lastPage = ref(1);
    const route = useRoute();
    route.params.user;
    route.params.page;
    const getAge = (birthdayString) => {
      const birthday = dayjs(birthdayString);
      if (!birthday.isValid()) return null;
      return dayjs().diff(birthday, "year");
    };
    return (_ctx, _push, _parent, _attrs) => {
      const _component_Head = Head;
      _push(`<!--[-->`);
      _push(ssrRenderComponent(_component_Head, { title: "" }, null, _parent));
      _push(ssrRenderComponent(_sfc_main$1, null, {
        default: withCtx((_, _push2, _parent2, _scopeId) => {
          if (_push2) {
            if (unref(userInfo)) {
              _push2(`<div class="flex-1 mt-5"${_scopeId}><div class="bg-gray-700 px-4 py-2 mb-4 rounded"${_scopeId}><h1 class="text-lg font-semibold"${_scopeId}>${ssrInterpolate(unref(userInfo).username)}</h1></div><div class="bg-gray-800 rounded mb-4"${_scopeId}><div class="grid grid-cols-2 gap-4 p-4 text-sm"${_scopeId}><div class="space-y-2"${_scopeId}><div class="flex justify-between"${_scopeId}><span class="text-gray-400"${_scopeId}>Username:</span><span${_scopeId}>${ssrInterpolate(unref(userInfo).username)}</span></div><div class="flex justify-between"${_scopeId}><span class="text-gray-400"${_scopeId}>User Rank:</span><span${_scopeId}>${ssrInterpolate(unref(userInfo).rank)}</span></div><div class="flex justify-between"${_scopeId}><span class="text-gray-400"${_scopeId}>Privacy:</span><span${_scopeId}>${ssrInterpolate(unref(userInfo).privacy)}</span></div><div class="flex justify-between"${_scopeId}><span class="text-gray-400"${_scopeId}>Join Date:</span><span${_scopeId}>${ssrInterpolate(("formatApprovedAt" in _ctx ? _ctx.formatApprovedAt : unref(formatApprovedAt))(unref(userInfo).joindate))}</span></div></div><div class="space-y-2"${_scopeId}><div class="flex justify-between"${_scopeId}><span class="text-gray-400"${_scopeId}>Age:</span><span${_scopeId}>${ssrInterpolate(getAge(unref(userInfo).birthday))}</span></div><div class="flex justify-between"${_scopeId}><span class="text-gray-400"${_scopeId}>Gender:</span><span${_scopeId}>${ssrInterpolate(unref(userInfo).gender)}</span></div><div class="flex justify-between"${_scopeId}><span class="text-gray-400"${_scopeId}>Country:</span><span${_scopeId}>${ssrInterpolate(unref(userInfo).country)}</span></div></div></div></div></div>`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`<div class="px-2 md:px-0"${_scopeId}><div class="featured-list bg-gray-800 rounded-lg overflow-hidden shadow-xl mt-6"${_scopeId}><div class="overflow-x-auto"${_scopeId}><table class="min-w-full"${_scopeId}><thead class="bg-gray-700"${_scopeId}><tr${_scopeId}><th class="text-left px-4 py-1 text-gray-300 font-semibold"${_scopeId}>name</th><th class="hidden md:table-cell text-center px-4 py-1 text-gray-300 font-semibold"${_scopeId}>se </th><th class="hidden md:table-cell text-center px-4 py-1 text-gray-300 font-semibold"${_scopeId}>le </th><th class="hidden md:table-cell text-center px-4 py-1 text-gray-300 font-semibold"${_scopeId}>time </th><th class="hidden md:table-cell text-center px-4 py-1 text-gray-300 font-semibold"${_scopeId}>size </th></tr></thead><tbody${_scopeId}>`);
            if (unref(torrents).length > 0) {
              _push2(`<!--[-->`);
              ssrRenderList(unref(torrents), (torrent, index) => {
                _push2(`<tr class="border-b border-gray-700 hover:bg-gray-750 transition-colors cursor-pointer text-xs"${_scopeId}>`);
                if (_ctx.page_type != "top" && _ctx.page_type != "trending") {
                  _push2(`<td class="px-2 py-3"${_scopeId}><div class="flex items-center justify-between"${_scopeId}><div class="flex items-center"${_scopeId}><a${ssrRenderAttr("href", `/sub/${torrent.subcategory_id}/0/`)}${_scopeId}>`);
                  if (torrent.subcategory) {
                    _push2(`<button class=""${_scopeId}><i class="${ssrRenderClass(`${torrent.subcategory.icon}`)}"${_scopeId}></i></button>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  _push2(`</a><a${ssrRenderAttr("href", `/torrent/${torrent.id}/${torrent.slug}/`)} class="text-gray-300 hover:text-orange-400 transition-colors ml-3"${_scopeId}>${ssrInterpolate(torrent.name)}</a></div>`);
                  if (torrent.comments_count) {
                    _push2(`<span class="bg-gray-500 text-black-900 rounded text-xs font-semibold px-2"${_scopeId}>${ssrInterpolate(torrent.comments_count)}</span>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  _push2(`</div></td>`);
                } else {
                  _push2(`<!---->`);
                }
                if (_ctx.page_type == "top" || _ctx.page_type == "trending") {
                  _push2(`<td class="px-2 py-3"${_scopeId}><div class="flex items-center justify-between"${_scopeId}><div class="flex items-center"${_scopeId}><a${ssrRenderAttr("href", `/sub/${torrent.subcategory_id}/0/`)}${_scopeId}>`);
                  if (torrent.subcategory) {
                    _push2(`<button class=""${_scopeId}><i class="${ssrRenderClass(`${torrent.subcategory.icon}`)}"${_scopeId}></i></button>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  _push2(`</a><a${ssrRenderAttr("href", `${torrent.torrent_link}`)} class="text-gray-300 hover:text-orange-400 transition-colors ml-3"${_scopeId}>${ssrInterpolate(torrent.name)}</a></div>`);
                  if (torrent.comments_count) {
                    _push2(`<span class="bg-gray-500 text-black-900 rounded text-xs font-semibold px-2"${_scopeId}>${ssrInterpolate(torrent.comments_count)}</span>`);
                  } else {
                    _push2(`<!---->`);
                  }
                  _push2(`</div></td>`);
                } else {
                  _push2(`<!---->`);
                }
                _push2(`<td class="text-center px-2 py-2 hidden md:table-cell"${_scopeId}><span class="bg-green-600 text-white px-1 text-xs rounded"${_scopeId}>${ssrInterpolate(torrent.seeders)}</span></td><td class="text-center px-2 py-2 hidden md:table-cell"${_scopeId}><span class="bg-red-800 text-white px-1 text-xs rounded"${_scopeId}>${ssrInterpolate(torrent.leechers)}</span></td><td class="text-center px-2 py-2 text-gray-400 hidden md:table-cell"${_scopeId}>${ssrInterpolate(("formatApprovedAt" in _ctx ? _ctx.formatApprovedAt : unref(formatApprovedAt))(torrent.approved_at))}</td><td class="text-center px-2 py-2 text-gray-400 hidden md:table-cell"${_scopeId}>${ssrInterpolate(torrent.size_formatted)}</td></tr>`);
              });
              _push2(`<!--]-->`);
            } else {
              _push2(`<!---->`);
            }
            _push2(`</tbody></table>`);
            _push2(ssrRenderComponent(TorrentPagination, {
              currentPage: unref(currentPage),
              lastPage: unref(lastPage),
              onPageChanged: _ctx.onPageChange
            }, null, _parent2, _scopeId));
            _push2(`</div></div></div>`);
          } else {
            return [
              unref(userInfo) ? (openBlock(), createBlock("div", {
                key: 0,
                class: "flex-1 mt-5"
              }, [
                createVNode("div", { class: "bg-gray-700 px-4 py-2 mb-4 rounded" }, [
                  createVNode("h1", { class: "text-lg font-semibold" }, toDisplayString(unref(userInfo).username), 1)
                ]),
                createVNode("div", { class: "bg-gray-800 rounded mb-4" }, [
                  createVNode("div", { class: "grid grid-cols-2 gap-4 p-4 text-sm" }, [
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode("div", { class: "flex justify-between" }, [
                        createVNode("span", { class: "text-gray-400" }, "Username:"),
                        createVNode("span", null, toDisplayString(unref(userInfo).username), 1)
                      ]),
                      createVNode("div", { class: "flex justify-between" }, [
                        createVNode("span", { class: "text-gray-400" }, "User Rank:"),
                        createVNode("span", null, toDisplayString(unref(userInfo).rank), 1)
                      ]),
                      createVNode("div", { class: "flex justify-between" }, [
                        createVNode("span", { class: "text-gray-400" }, "Privacy:"),
                        createVNode("span", null, toDisplayString(unref(userInfo).privacy), 1)
                      ]),
                      createVNode("div", { class: "flex justify-between" }, [
                        createVNode("span", { class: "text-gray-400" }, "Join Date:"),
                        createVNode("span", null, toDisplayString(("formatApprovedAt" in _ctx ? _ctx.formatApprovedAt : unref(formatApprovedAt))(unref(userInfo).joindate)), 1)
                      ])
                    ]),
                    createVNode("div", { class: "space-y-2" }, [
                      createVNode("div", { class: "flex justify-between" }, [
                        createVNode("span", { class: "text-gray-400" }, "Age:"),
                        createVNode("span", null, toDisplayString(getAge(unref(userInfo).birthday)), 1)
                      ]),
                      createVNode("div", { class: "flex justify-between" }, [
                        createVNode("span", { class: "text-gray-400" }, "Gender:"),
                        createVNode("span", null, toDisplayString(unref(userInfo).gender), 1)
                      ]),
                      createVNode("div", { class: "flex justify-between" }, [
                        createVNode("span", { class: "text-gray-400" }, "Country:"),
                        createVNode("span", null, toDisplayString(unref(userInfo).country), 1)
                      ])
                    ])
                  ])
                ])
              ])) : createCommentVNode("", true),
              createVNode("div", { class: "px-2 md:px-0" }, [
                createVNode("div", { class: "featured-list bg-gray-800 rounded-lg overflow-hidden shadow-xl mt-6" }, [
                  createVNode("div", { class: "overflow-x-auto" }, [
                    createVNode("table", { class: "min-w-full" }, [
                      createVNode("thead", { class: "bg-gray-700" }, [
                        createVNode("tr", null, [
                          createVNode("th", { class: "text-left px-4 py-1 text-gray-300 font-semibold" }, "name"),
                          createVNode("th", { class: "hidden md:table-cell text-center px-4 py-1 text-gray-300 font-semibold" }, "se "),
                          createVNode("th", { class: "hidden md:table-cell text-center px-4 py-1 text-gray-300 font-semibold" }, "le "),
                          createVNode("th", { class: "hidden md:table-cell text-center px-4 py-1 text-gray-300 font-semibold" }, "time "),
                          createVNode("th", { class: "hidden md:table-cell text-center px-4 py-1 text-gray-300 font-semibold" }, "size ")
                        ])
                      ]),
                      createVNode("tbody", null, [
                        unref(torrents).length > 0 ? (openBlock(true), createBlock(Fragment, { key: 0 }, renderList(unref(torrents), (torrent, index) => {
                          return openBlock(), createBlock("tr", {
                            key: index,
                            class: "border-b border-gray-700 hover:bg-gray-750 transition-colors cursor-pointer text-xs"
                          }, [
                            _ctx.page_type != "top" && _ctx.page_type != "trending" ? (openBlock(), createBlock("td", {
                              key: 0,
                              class: "px-2 py-3"
                            }, [
                              createVNode("div", { class: "flex items-center justify-between" }, [
                                createVNode("div", { class: "flex items-center" }, [
                                  createVNode("a", {
                                    href: `/sub/${torrent.subcategory_id}/0/`
                                  }, [
                                    torrent.subcategory ? (openBlock(), createBlock("button", {
                                      key: 0,
                                      class: ""
                                    }, [
                                      createVNode("i", {
                                        class: `${torrent.subcategory.icon}`
                                      }, null, 2)
                                    ])) : createCommentVNode("", true)
                                  ], 8, ["href"]),
                                  createVNode("a", {
                                    href: `/torrent/${torrent.id}/${torrent.slug}/`,
                                    class: "text-gray-300 hover:text-orange-400 transition-colors ml-3"
                                  }, toDisplayString(torrent.name), 9, ["href"])
                                ]),
                                torrent.comments_count ? (openBlock(), createBlock("span", {
                                  key: 0,
                                  class: "bg-gray-500 text-black-900 rounded text-xs font-semibold px-2"
                                }, toDisplayString(torrent.comments_count), 1)) : createCommentVNode("", true)
                              ])
                            ])) : createCommentVNode("", true),
                            _ctx.page_type == "top" || _ctx.page_type == "trending" ? (openBlock(), createBlock("td", {
                              key: 1,
                              class: "px-2 py-3"
                            }, [
                              createVNode("div", { class: "flex items-center justify-between" }, [
                                createVNode("div", { class: "flex items-center" }, [
                                  createVNode("a", {
                                    href: `/sub/${torrent.subcategory_id}/0/`
                                  }, [
                                    torrent.subcategory ? (openBlock(), createBlock("button", {
                                      key: 0,
                                      class: ""
                                    }, [
                                      createVNode("i", {
                                        class: `${torrent.subcategory.icon}`
                                      }, null, 2)
                                    ])) : createCommentVNode("", true)
                                  ], 8, ["href"]),
                                  createVNode("a", {
                                    href: `${torrent.torrent_link}`,
                                    class: "text-gray-300 hover:text-orange-400 transition-colors ml-3"
                                  }, toDisplayString(torrent.name), 9, ["href"])
                                ]),
                                torrent.comments_count ? (openBlock(), createBlock("span", {
                                  key: 0,
                                  class: "bg-gray-500 text-black-900 rounded text-xs font-semibold px-2"
                                }, toDisplayString(torrent.comments_count), 1)) : createCommentVNode("", true)
                              ])
                            ])) : createCommentVNode("", true),
                            createVNode("td", { class: "text-center px-2 py-2 hidden md:table-cell" }, [
                              createVNode("span", { class: "bg-green-600 text-white px-1 text-xs rounded" }, toDisplayString(torrent.seeders), 1)
                            ]),
                            createVNode("td", { class: "text-center px-2 py-2 hidden md:table-cell" }, [
                              createVNode("span", { class: "bg-red-800 text-white px-1 text-xs rounded" }, toDisplayString(torrent.leechers), 1)
                            ]),
                            createVNode("td", { class: "text-center px-2 py-2 text-gray-400 hidden md:table-cell" }, toDisplayString(("formatApprovedAt" in _ctx ? _ctx.formatApprovedAt : unref(formatApprovedAt))(torrent.approved_at)), 1),
                            createVNode("td", { class: "text-center px-2 py-2 text-gray-400 hidden md:table-cell" }, toDisplayString(torrent.size_formatted), 1)
                          ]);
                        }), 128)) : createCommentVNode("", true)
                      ])
                    ]),
                    createVNode(TorrentPagination, {
                      currentPage: unref(currentPage),
                      lastPage: unref(lastPage),
                      onPageChanged: _ctx.onPageChange
                    }, null, 8, ["currentPage", "lastPage", "onPageChanged"])
                  ])
                ])
              ])
            ];
          }
        }),
        _: 1
      }, _parent));
      _push(`<!--]-->`);
    };
  }
};
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/user/[user]/[page].vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
export {
  _sfc_main as default
};
//# sourceMappingURL=_page_-Djo64ljK.js.map
