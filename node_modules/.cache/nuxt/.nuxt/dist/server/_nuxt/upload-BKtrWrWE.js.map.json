{"file":"upload-BKtrWrWE.js","mappings":"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","names":["_sfc_main","response","_ssrRenderAttrs","_mergeProps","_ssrRenderClass","_ssrRenderAttr","_ssrInterpolate","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderList","_push","_parent","_unref","_ssrRenderComponent","_createBlock"],"sources":["../../../../../../../components/TorrentAdminUpload.vue","../../../../../../../pages/upload.vue"],"sourcesContent":["<template>\r\n  <div class=\"mt-5 bg-slate-600 rounded\">\r\n    <div class=\"max-w-4xl mx-auto\">\r\n\r\n      <!-- Success Toast -->\r\n      <div v-if=\"showToast\"\r\n        class=\"fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg transform transition-all duration-300\"\r\n        :class=\"{ 'translate-y-0 opacity-100': showToast, 'translate-y-2 opacity-0': !showToast }\">\r\n        <div class=\"flex items-center\">\r\n          <svg class=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n            <path fill-rule=\"evenodd\"\r\n              d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\"\r\n              clip-rule=\"evenodd\"></path>\r\n          </svg>\r\n          URL copied to clipboard!\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Main Content -->\r\n    <div class=\"container mx-auto text-white\">\r\n      <div class=\"shadow-lg p-6\">\r\n        <h2 class=\"text-2xl font-bold mb-6 border-b-2 border-orange-400 pb-2\">\r\n          Create New Blog Post\r\n        </h2>\r\n\r\n        <form @submit.prevent=\"submitPost\" class=\"space-y-6\">\r\n          <!-- Title -->\r\n          <div>\r\n            <label for=\"title\" class=\"block text-sm font-semibold  mb-2\">Title</label>\r\n            <input type=\"text\" id=\"title\" v-model=\"form.title\"\r\n              class=\"w-full px-3 py-2 border text-gray-700 border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-colors\"\r\n              placeholder=\"Enter post title\" required>\r\n          </div>\r\n\r\n          <!-- Torrent File Upload -->\r\n          <div>\r\n            <label for=\"torrentFile\" class=\"block text-sm font-semibold  mb-2\">Torrent File</label>\r\n            <div class=\"flex items-center space-x-3\">\r\n              <!-- Hidden file input -->\r\n              <input type=\"file\" ref=\"fileInput\" id=\"torrentFile\" @change=\"handleFileSelect\" accept=\".torrent\"\r\n                class=\"hidden text-gray-700\">\r\n\r\n              <!-- Display selected file path -->\r\n              <input type=\"text\" v-model=\"selectedFilePath\" readonly\r\n                class=\"flex-1 px-3 py-2 border text-gray-700 border-gray-300 rounded-md shadow-sm bg-gray-50 focus:outline-none\"\r\n                placeholder=\"No file selected\">\r\n\r\n              <!-- Browse button -->\r\n              <button type=\"button\" @click=\"openFileDialog\"\r\n                class=\"bg-orange-400 hover:bg-orange-500 text-white font-bold px-4 py-2 rounded transition-colors\">\r\n                Browse\r\n              </button>\r\n            </div>\r\n            <p class=\"text-xs  mt-1\">Select a .torrent file to upload</p>\r\n          </div>\r\n\r\n          <!-- Content Text -->\r\n          <div>\r\n            <label for=\"content\" class=\"block text-sm font-semibold  mb-2\">Content Text</label>\r\n            <textarea id=\"content\" v-model=\"form.content\" rows=\"6\"\r\n              class=\"w-full px-3 py-2 border text-gray-700 border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-colors resize-vertical\"\r\n              placeholder=\"Enter your blog post content here...\" required></textarea>\r\n          </div>\r\n\r\n          <!-- Language and Category Row -->\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            <!-- Language -->\r\n            <div>\r\n              <label for=\"language\" class=\"block text-sm font-semibold mb-2\">Language</label>\r\n              <select id=\"language\" v-model=\"form.language\"\r\n                class=\"w-full px-3 py-2  text-gray-700  border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-colors\"\r\n                required>\r\n                <option value=\"\">Choose language</option>\r\n                <option value=\"english\">English</option>\r\n                <option value=\"spanish\">Spanish</option>\r\n                <option value=\"french\">French</option>\r\n                <option value=\"german\">German</option>\r\n                <option value=\"chinese\">Chinese</option>\r\n                <option value=\"japanese\">Japanese</option>\r\n              </select>\r\n            </div>\r\n\r\n            <!-- Category and Type -->\r\n            <div>\r\n              <div class=\"grid grid-cols-2 gap-3\">\r\n                <div>\r\n                  <label for=\"category\" class=\"block text-sm font-semibold  mb-2\">Category</label>\r\n                  <select id=\"category\" v-model=\"form.category\" @change=\"handleCategoryChange\"\r\n                    class=\"w-full text-gray-700 px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-colors\"\r\n                    required>\r\n                    <option value=\"\">Choose One</option>\r\n                    <option v-for=\"cat in categories\" :key=\"cat.id\" :value=\"cat.id\">\r\n                      {{ cat.name }}\r\n                    </option>\r\n                  </select>\r\n\r\n                </div>\r\n                <div>\r\n                  <label for=\"type\" class=\"block text-sm font-semibold  mb-2\">Type</label>\r\n                  <select id=\"subcategory\" v-model=\"form.subcategory\"\r\n                    class=\"w-full px-3 py-2 border text-gray-700 border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-colors\"\r\n                    required>\r\n                    <option value=\"\">Choose sub category</option>\r\n                    <option v-for=\"item in sub_categories\" :key=\"item.value\" :value=\"item.id\">\r\n                      {{ item.name }}\r\n                    </option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Tags -->\r\n          <div>\r\n            <label for=\"tags\" class=\"block text-sm font-semibold  mb-2\">Tags</label>\r\n            <input type=\"text\" id=\"tags\" v-model=\"form.tags\"\r\n              class=\"w-full text-gray-700  bg-white px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-orange-500 transition-colors\"\r\n              placeholder=\"Enter tags separated by commas\">\r\n            <p class=\"text-xs mt-1\">Use commas to separate multiple tags (e.g., web design, css, html)</p>\r\n          </div>\r\n\r\n          <!-- Format Description -->\r\n          <div>\r\n            <label for=\"description\" class=\"block text-sm font-semibold  mb-2\">Format Description</label>\r\n            <div class=\"border border-gray-300 rounded-md p-3 bg-gray-50\">\r\n              <div class=\"flex flex-wrap gap-2 text-xs mb-3\">\r\n                <button type=\"button\" v-for=\"tool in formatTools\" :key=\"tool\" @click=\"applyFormat(tool)\"\r\n                  class=\"px-2 py-1 bg-gray-500 text-white hover:bg-gray-400 rounded transition-colors\">\r\n                  {{ tool }}\r\n                </button>\r\n              </div>\r\n              <textarea ref=\"descriptionTextarea\" v-model=\"form.description\" rows=\"4\"\r\n                class=\"w-full px-3 py-2 text-gray-700 border-2 bg-white rounded focus:outline-none focus:ring-2 focus:ring-orange-500 resize-vertical\"\r\n                placeholder=\"Enter formatted description here...\"></textarea>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <!-- Submit Button -->\r\n          <div class=\"flex justify-end pt-6 border-t border-gray-200\">\r\n            <button type=\"submit\" :disabled=\"isSubmitting\"\r\n              class=\"bg-gradient-to-r from-orange-500 to-red-600 hover:from-orange-600 hover:to-red-700 disabled:opacity-50 disabled:cursor-not-allowed text-white font-semibold py-3 px-8 rounded-lg shadow-lg transform hover:scale-105 transition-all duration-200 focus:outline-none focus:ring-4 focus:ring-orange-300\">\r\n              {{ isSubmitting ? 'UPLOADING...' : 'UPLOAD' }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport torrentService from '~/api/torrentService';\r\nexport default {\r\n\r\n  name: 'BlogPostForm',\r\n  props: {\r\n    categories: {\r\n      type: Array\r\n    }\r\n  },\r\n  data(props) {\r\n    \r\n    const categories = ref([]);\r\n    const sub_categories = ref([]);\r\n    categories.value = props.categories ? props.categories : [];\r\n    sub_categories.value = props.categories ? props.categories[0].subcategory : [];\r\n    \r\n\r\n    return {\r\n      isSubmitting: false,\r\n      selectedFilePath: '',\r\n      showToast: false,\r\n      copiedUrl: null,\r\n      categories,\r\n      sub_categories,\r\n      announceUrls: [\r\n        { id: 1, link: 'http://tracker.example.com:8080/announce' },\r\n        { id: 2, link: 'http://tracker2.example.com:6969/announce' }\r\n      ],\r\n      formatTools: ['Bold', 'Italic', 'Underline', 'Quote', 'Code', 'List', 'Link', 'Full Screen', 'Image', 'YouTube'],\r\n      form: {\r\n        title: '',\r\n        content: '',\r\n        language: '',\r\n        category: '',\r\n        subcategory: '',\r\n        tags: '',\r\n        description: '',\r\n        torrentFile: null,\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // Open file dialog\r\n    openFileDialog() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n\r\n\r\n    // Handle file selection\r\n    handleFileSelect(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        this.form.torrentFile = file;\r\n        this.selectedFilePath = file.name; // Show just filename for security\r\n        // For debugging - you can see full file info in console        \r\n        this.showToast = true;\r\n        setTimeout(() => this.showToast = false, 3000);\r\n      }\r\n    },\r\n\r\n    // Submit form with file\r\n    async submitPost() {\r\n      this.isSubmitting = true;\r\n      try {\r\n        // Validate required fields\r\n        if (!this.form.title || !this.form.content || !this.form.language ||\r\n          !this.form.category || !this.form.subcategory || !this.form.torrentFile) {\r\n          alert('Please fill in all required fields and select a torrent file');\r\n          return;\r\n        }\r\n        // Prepare FormData for file upload\r\n        const formData = new FormData();\r\n\r\n        // Add all form fields\r\n        Object.keys(this.form).forEach(key => {\r\n          if (key === 'torrentFile' && this.form[key]) {\r\n            formData.append('torrent_file', this.form[key]); // must be a File object\r\n          } else if (this.form[key] && key !== 'torrentFile') {\r\n            formData.append(key, this.form[key]);\r\n          }\r\n        });\r\n        const token = localStorage.getItem('token');\r\n        // Send to Laravel API\r\n        try {\r\n          // const response = await axios.post(\"http://127.0.0.1:8000/api/torrents\", formData, {\r\n          //   headers: {\r\n          //     Authorization: `Bearer ${token}`,\r\n          //     \"Content-Type\": \"multipart/form-data\", // let axios handle\r\n          //   },\r\n          // });\r\n          const response =  await torrentService.createTorrent(formData)\r\n          console.log(response);\r\n          \r\n        } catch (error) {\r\n          console.error(\"Upload failed:\", error.response?.data || error.message);\r\n        }\r\n\r\n        this.resetForm();\r\n        this.isSubmitting = false;\r\n        if (response.success) {\r\n          const result = await response.json();\r\n          //alert('Torrent uploaded successfully!');\r\n          this.resetForm();\r\n        } else {\r\n          throw new Error('Upload failed');\r\n        }\r\n\r\n      } catch (error) {\r\n        //console.error('Error submitting post:', error);\r\n        //alert('Error uploading torrent. Please try again.');\r\n      } finally {\r\n        this.isSubmitting = false;\r\n      }\r\n    },\r\n\r\n    // Copy URL to clipboard\r\n    async copyToClipboard(text) {\r\n      try {\r\n        await navigator.clipboard.writeText(text);\r\n        const urlObj = this.announceUrls.find(url => url.link === text);\r\n        this.copiedUrl = urlObj.id;\r\n        setTimeout(() => this.copiedUrl = null, 2000);\r\n      } catch (err) {\r\n        console.error('Failed to copy: ', err);\r\n      }\r\n    },\r\n\r\n    // Apply text formatting\r\n    applyFormat(tool) {\r\n      const textarea = this.$refs.descriptionTextarea;\r\n      const start = textarea.selectionStart;\r\n      const end = textarea.selectionEnd;\r\n      const selectedText = this.form.description.substring(start, end);\r\n\r\n      let formattedText = '';\r\n      switch (tool) {\r\n        case 'Bold':\r\n          formattedText = `<b>${selectedText}</b>`;\r\n          break;\r\n        case 'Italic':\r\n          formattedText = `<p style = 'font-style: italic'>${selectedText}</p>`;\r\n          break;\r\n        case 'Underline':\r\n          formattedText = `<p style = 'text-decoration: underline'>${selectedText}</p>`;\r\n          break;\r\n        case 'Quote':\r\n          formattedText = `<blockquote> ${selectedText}</blockquote>`;\r\n          break;\r\n        case 'Code':\r\n          formattedText = `<code>${selectedText}</code>`;\r\n          break;\r\n        case 'List':\r\n          formattedText = `<ul><li>${selectedText}</li></ul>`;\r\n          break;\r\n        case 'Link':\r\n          formattedText = `<a href = '${selectedText}' ></a>`;\r\n          break;\r\n        case 'Image':\r\n          formattedText = `<img src = ${selectedText} />`;\r\n          break;\r\n        case 'YouTube':\r\n          formattedText = `<video src = ${selectedText} />`;\r\n          break;\r\n        default:\r\n          formattedText = selectedText;\r\n      }\r\n\r\n\r\n\r\n      this.form.description =\r\n        this.form.description.substring(0, start) +\r\n        formattedText +\r\n        this.form.description.substring(end);\r\n\r\n      this.$nextTick(() => {\r\n        textarea.focus();\r\n        textarea.setSelectionRange(start + formattedText.length, start + formattedText.length);\r\n      });\r\n    },\r\n\r\n    // Reset form\r\n    resetForm() {\r\n      this.form = {\r\n        title: '',\r\n        content: '',\r\n        language: '',\r\n        category: '',\r\n        sub_categories: '',\r\n        type: '',\r\n        tags: '',\r\n        description: '',\r\n        torrentFile: null,\r\n      };\r\n      this.selectedFilePath = '';\r\n      this.$refs.fileInput.value = '';\r\n\r\n    },\r\n\r\n    handleCategoryChange() {     \r\n      const selected = this.categories.find(cat => cat.id === parseInt(this.form.category));\r\n      this.sub_categories = selected ? selected.subcategory : [];\r\n      this.form.subcategory = \"\"; // reset subcategory\r\n    }\r\n\r\n  },\r\n\r\n  mounted() {\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.custom-file-input {\r\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\r\n}\r\n</style>","<script setup>\r\nimport AppLayout from '~/layouts/AppLayout.vue';\r\nimport TorrentAdminUpload from '~/components/TorrentAdminUpload.vue';\r\nimport torrentService from '~/api/torrentService';\r\nimport { useRouter } from 'vue-router'\r\nconst router = useRouter()\r\nconst categories = ref([]);\r\nconst isLoggedIn = ref(false)\r\n// Fetch function to get torrent data and update dashboard_data\r\nasync function fetchCategoryData() {\r\n  try {\r\n    const response = await torrentService.get('/torrents/categorydata');\r\n    // For demo, assuming all torrents in one group with title \"All Torrents\"\r\n    //dashboard_data.splice(0) // clear previous data\r\n    categories.value = response.data.data;\r\n  } catch (error) {\r\n    console.error('Failed to fetch torrents:', error)\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  const token = localStorage.getItem('token')\r\n  isLoggedIn.value = !!token\r\n  if(isLoggedIn.value == false) router.push('/login')\r\n  fetchCategoryData();\r\n  \r\n});\r\n</script>\r\n<template>\r\n\r\n  <AppLayout> \r\n     <TorrentAdminUpload  v-if=\"categories.length > 0\" :categories = \"categories\"/>    \r\n  </AppLayout>\r\n   \r\n</template>\r\n"],"version":3}